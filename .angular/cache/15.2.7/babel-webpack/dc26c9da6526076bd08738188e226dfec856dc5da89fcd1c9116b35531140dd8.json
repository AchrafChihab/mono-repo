{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { ProductsService } from './../../../../../../libs/shared/src/lib/services/products.service';\nimport { Location } from \"@angular/common\";\nimport { Component } from '@angular/core';\nimport { FormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { CategoryService } from '@medcoding/shared';\nlet AddProductComponent = class AddProductComponent {\n  constructor(productservice, location, categoryService) {\n    this.productservice = productservice;\n    this.location = location;\n    this.categoryService = categoryService;\n    this.productForm = new FormGroup({\n      title: new UntypedFormControl('', [Validators.required]),\n      description: new UntypedFormControl('', [Validators.required]),\n      brand: new UntypedFormControl('', [Validators.required]),\n      countStock: new UntypedFormControl('', [Validators.required]),\n      rating: new UntypedFormControl('', [Validators.required]),\n      // created_at: new UntypedFormControl('', [Validators.required]),\n      // updated_at: new UntypedFormControl('', [Validators.required]),\n      price: new UntypedFormControl('', [Validators.required]),\n      category: new UntypedFormControl('', [Validators.required])\n      // thumbnail: new UntypedFormControl('', [Validators.required]),\n    });\n\n    this.products = [];\n    this.categories = [];\n  }\n  // myProduct:Product = {\n  //   title:\"\",\n  //   description:\"\",\n  //   brand:\"\",\n  //   countStock:0,\n  //   rating:0,\n  //   price:0,\n  //   category:\"\",\n  // }\n  submit(form) {\n    if (form.invalid) {\n      return;\n    }\n    this.saveProduct();\n  }\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      const mimeType = event.target.files[0].type;\n      if (mimeType.match(/image\\/*/) == null) {\n        return;\n      }\n      this.thumbnail = file;\n    }\n  }\n  saveProduct() {\n    const formData = new FormData();\n    if (!this.thumbnail) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const product = {\n      title: this.productForm.controls['title'].value,\n      // content: this.productForm.controls['content'].value,\n      description: this.productForm.controls['description'].value,\n      brand: this.productForm.controls['brand'].value,\n      countStock: this.productForm.controls['countStock'].value,\n      // isFeatured: this.productForm.controls['isFeatured'].value,\n      price: this.productForm.controls['price'].value,\n      category: this.productForm.controls['category'].value,\n      rating: this.productForm.controls['rating'].value\n    };\n    console.log(this.thumbnail);\n    formData.append('thumbnail', this.thumbnail);\n    formData.append('product', JSON.stringify(product));\n    console.log(product, '_________________________');\n    this.productservice.addProduct(formData).subscribe(() => {\n      // this.productForm.reset()\n      // this.router.navigate(['/blog/addProduct'])\n    });\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.categoryService.getAllCategories().subscribe(res => this.categories = res.categories);\n  }\n};\nAddProductComponent = __decorate([Component({\n  selector: 'admin-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n}), __metadata(\"design:paramtypes\", [ProductsService, Location, CategoryService])], AddProductComponent);\nexport { AddProductComponent };","map":{"version":3,"names":["ProductsService","Location","Component","FormGroup","UntypedFormControl","Validators","CategoryService","AddProductComponent","constructor","productservice","location","categoryService","productForm","title","required","description","brand","countStock","rating","price","category","products","categories","submit","form","invalid","saveProduct","onSelectFile","event","target","files","length","file","mimeType","type","match","thumbnail","formData","FormData","product","controls","value","console","log","append","JSON","stringify","addProduct","subscribe","ngOnInit","getCategories","getAllCategories","res","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\dell\\Desktop\\Angular-15-with-monorepo--master\\apps\\admin\\src\\app\\pages\\add-product\\add-product.component.ts"],"sourcesContent":["// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { ProductsService } from './../../../../../../libs/shared/src/lib/services/products.service';\nimport { Location } from \"@angular/common\";\nimport { Component } from '@angular/core';\nimport { FormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Category, CategoryService, ResCategory } from '@medcoding/shared';\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport { Product } from 'libs/shared/src/lib/models/product';\n\n@Component({\n  selector: 'admin-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent {\n\n\n  productForm = new FormGroup({\n      title: new UntypedFormControl('', [Validators.required]),\n      description: new UntypedFormControl('', [Validators.required]),\n      brand: new UntypedFormControl('', [Validators.required]),\n      countStock: new UntypedFormControl('', [Validators.required]),\n      rating: new UntypedFormControl('', [Validators.required]),\n      // created_at: new UntypedFormControl('', [Validators.required]),\n      // updated_at: new UntypedFormControl('', [Validators.required]),\n      price: new UntypedFormControl('', [Validators.required]),\n      category: new UntypedFormControl('', [Validators.required]),\n      // thumbnail: new UntypedFormControl('', [Validators.required]),\n  })\n\n\n\n  constructor(private productservice: ProductsService, private location: Location,private categoryService: CategoryService) {}\n\n  products:Product[]=[]\n  categories:Category[]=[]\n  thumbnail : any;\n\n\n  // myProduct:Product = {\n  //   title:\"\",\n  //   description:\"\",\n  //   brand:\"\",\n  //   countStock:0,\n  //   rating:0,\n  //   price:0,\n  //   category:\"\",\n\n\n  // }\n\n  submit(form: FormGroup) {\n\n    if(form.invalid) {\n      return\n    }\n\n    this.saveProduct()\n\n  }\n\n\n  onSelectFile(event: any) {\n    if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        const mimeType = event.target.files[0].type;\n        if (mimeType.match(/image\\/*/) == null) {\n            return ;\n        }\n        this.thumbnail = file;\n\n    }\n  }\n\n  saveProduct(){\n    const formData = new FormData() ;\n    if(!this.thumbnail){\n      return\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const product = {\n      title: this.productForm.controls['title'].value,\n      // content: this.productForm.controls['content'].value,\n      description: this.productForm.controls['description'].value,\n      brand:this.productForm.controls['brand'].value,\n      countStock: this.productForm.controls['countStock'].value,\n      // isFeatured: this.productForm.controls['isFeatured'].value,\n      price: this.productForm.controls['price'].value ,\n      category : this.productForm.controls['category'].value,\n      rating : this.productForm.controls['rating'].value\n\n    }\n    console.log(this.thumbnail)\n    formData.append('thumbnail', this.thumbnail) ;\n    formData.append('product' , JSON.stringify(product) ) ;\n    console.log(product,'_________________________')\n    this.productservice.addProduct(formData).subscribe(() => {\n        // this.productForm.reset()\n        // this.router.navigate(['/blog/addProduct'])\n      })\n  }\n  ngOnInit(): void {\n    this.getCategories()\n}\n\n    getCategories(){\n      this.categoryService.getAllCategories().subscribe((res: ResCategory) => this.categories = res.categories);\n      }\n\n  // saveProduct() {\n  //   this.productservice.addProduct(this.productForm.value).subscribe(res => {\n  //     if(res.success) {\n  //      this.location.back()\n  //     }\n  //   },\n  //   err => console.log(err))\n  // }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}