{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/v1/users';\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  addUsers(category) {\n    return this.http.post(this.apiUrl, category);\n  }\n  updateUsers(id, category) {\n    return this.http.put(`${this.apiUrl}/${id}`, category);\n  }\n  getUsers(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  deleteUsers(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpClient","UsersService","constructor","http","apiUrl","getAllUsers","get","addUsers","category","post","updateUsers","id","put","getUsers","deleteUsers","delete","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["C:\\laragon\\www\\Angular-15-with-monorepo--master\\libs\\shared\\src\\lib\\services\\users.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ResOneUser, ResUsers, Users } from '../models/users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n\n  apiUrl = 'http://localhost:5000/api/v1/users'\n\n  constructor(private http: HttpClient) { }\n\n  getAllUsers(): Observable<ResUsers> {\n    return this.http.get<ResUsers>(this.apiUrl)\n  }\n\n  addUsers(category: Users): Observable<ResOneUser> {\n    return this.http.post<ResOneUser>(this.apiUrl, category)\n  }\n\n  updateUsers(id: string, category: Users): Observable<ResOneUser> {\n    return this.http.put<ResOneUser>(`${this.apiUrl}/${id}`, category)\n  }\n\n  getUsers(id: string): Observable<ResOneUser> {\n    return this.http.get<ResOneUser>(`${this.apiUrl}/${id}`)\n  }\n  deleteUsers(id: string): Observable<ResOneUser> {\n    return this.http.delete<ResOneUser>(`${this.apiUrl}/${id}`)\n  }\n\n\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;;AAOjD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,oCAAoC;EAEL;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,QAAQA,CAACC,QAAe;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAa,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EAC1D;EAEAE,WAAWA,CAACC,EAAU,EAAEH,QAAe;IACrC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAa,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,EAAEH,QAAQ,CAAC;EACpE;EAEAK,QAAQA,CAACF,EAAU;IACjB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,MAAM,IAAIO,EAAE,EAAE,CAAC;EAC1D;EACAG,WAAWA,CAACH,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAa,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,CAAC;EAC7D;;AAxBWV,YAAY,C;mBAAZA,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAlB,UAAA;AAAA;AAAZC,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}