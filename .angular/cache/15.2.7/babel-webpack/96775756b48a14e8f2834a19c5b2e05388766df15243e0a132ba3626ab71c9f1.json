{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { CategoryService } from '@medcoding/shared';\nimport { Component } from '@angular/core';\nlet ListCategoryComponent = class ListCategoryComponent {\n  constructor(categoryService) {\n    this.categoryService = categoryService;\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.categoryService.getAllCategories().subscribe(({\n      success,\n      categories\n    }) => {\n      if (success) {\n        this.categories = categories;\n      }\n    });\n  }\n  deleteCategory(id) {\n    this.categoryService.deleteCategory(id).subscribe(() => {\n      this.getCategories();\n    });\n  }\n};\nListCategoryComponent = __decorate([Component({\n  selector: 'admin-listcategory',\n  templateUrl: './list-category.component.html',\n  styleUrls: ['./list-category.component.scss'],\n  providers: [CategoryService]\n}), __metadata(\"design:paramtypes\", [CategoryService])], ListCategoryComponent);\nexport { ListCategoryComponent };","map":{"version":3,"names":["CategoryService","Component","ListCategoryComponent","constructor","categoryService","categories","ngOnInit","getCategories","getAllCategories","subscribe","success","deleteCategory","id","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["C:\\Users\\dell\\Desktop\\Angular-15-with-monorepo--master\\apps\\admin\\src\\app\\pages\\list-category\\list-category.component.ts"],"sourcesContent":["\nimport { CategoryService, Category, ResCategory } from '@medcoding/shared';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-listcategory',\n  templateUrl: './list-category.component.html',\n  styleUrls: ['./list-category.component.scss'],\n  providers: [CategoryService]\n})\nexport class ListCategoryComponent implements OnInit {\n\n  categories: Category[] = []\n\n  constructor(private categoryService: CategoryService) {}\n\n  ngOnInit(): void {\n      this.getCategories()\n  }\n\n  getCategories() {\n    this.categoryService.getAllCategories().subscribe(({success, categories}: ResCategory) => {\n      if(success) {\n\n        this.categories = categories\n      }\n    })\n  }\n\n  deleteCategory(id:string ){\n    this.categoryService.deleteCategory(id).subscribe(()=>{\n      this.getCategories();\n    })\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAA+B,mBAAmB;AAC1E,SAASC,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,UAAU,GAAe,EAAE;EAE4B;EAEvDC,QAAQA,CAAA;IACJ,IAAI,CAACC,aAAa,EAAE;EACxB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACH,eAAe,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAAC,CAAC;MAACC,OAAO;MAAEL;IAAU,CAAc,KAAI;MACvF,IAAGK,OAAO,EAAE;QAEV,IAAI,CAACL,UAAU,GAAGA,UAAU;;IAEhC,CAAC,CAAC;EACJ;EAEAM,cAAcA,CAACC,EAAS;IACtB,IAAI,CAACR,eAAe,CAACO,cAAc,CAACC,EAAE,CAAC,CAACH,SAAS,CAAC,MAAI;MACpD,IAAI,CAACF,aAAa,EAAE;IACtB,CAAC,CAAC;EACJ;CACD;AAxBYL,qBAAqB,GAAAW,UAAA,EANjCZ,SAAS,CAAC;EACTa,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC,CAAC;EAC7CC,SAAS,EAAE,CAACjB,eAAe;CAC5B,CAAC,E,iCAKqCA,eAAe,G,EAJzCE,qBAAqB,CAwBjC;SAxBYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}