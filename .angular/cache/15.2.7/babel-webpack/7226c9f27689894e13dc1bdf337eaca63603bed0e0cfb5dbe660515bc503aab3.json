{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class CategoryService {\n  constructor(http, route) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/v1/categories';\n  }\n  getAllCategories() {\n    return this.http.get(this.apiUrl);\n  }\n  addCategory(category) {\n    return this.http.post(this.apiUrl, category);\n  }\n  updateCategory(id, category) {\n    return this.http.patch(`${this.apiUrl}/${id}`, category);\n  }\n  getCategory(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpClient","Router","CategoryService","constructor","http","route","apiUrl","getAllCategories","get","addCategory","category","post","updateCategory","id","patch","getCategory","deleteCategory","delete","i0","ɵɵinject","i1","i2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\dell\\Desktop\\Angular-15-with-monorepo--master\\libs\\shared\\src\\lib\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { Router } from '@angular/router';\n\nimport { Category, ResCategory, ResOneCategory } from '@medcoding/shared'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  apiUrl = 'http://localhost:5000/api/v1/categories'\n\n  constructor(private http: HttpClient, route:Router) { }\n\n  getAllCategories(): Observable<ResCategory> {\n    return this.http.get<ResCategory>(this.apiUrl)\n  }\n\n  addCategory(category: Category): Observable<ResOneCategory> {\n    return this.http.post<ResOneCategory>(this.apiUrl, category)\n  }\n\n  updateCategory(id: string, category: Category): Observable<ResOneCategory> {\n    return this.http.patch<ResOneCategory>(`${this.apiUrl}/${id}`, category)\n  }\n\n  getCategory(id: string): Observable<ResOneCategory> {\n    return this.http.get<ResOneCategory>(`${this.apiUrl}/${id}`)\n  }\n  deleteCategory(id: string): Observable<ResOneCategory> {\n    return this.http.delete<ResOneCategory>(`${this.apiUrl}/${id}`)\n  }\n\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,MAAM,QAAQ,iBAAiB;;;;AAOxC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB,EAAEC,KAAY;IAA9B,KAAAD,IAAI,GAAJA,IAAI;IAFxB,KAAAE,MAAM,GAAG,yCAAyC;EAEI;EAEtDC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAc,IAAI,CAACF,MAAM,CAAC;EAChD;EAEAG,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAiB,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EAC9D;EAEAE,cAAcA,CAACC,EAAU,EAAEH,QAAkB;IAC3C,OAAO,IAAI,CAACN,IAAI,CAACU,KAAK,CAAiB,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,EAAEH,QAAQ,CAAC;EAC1E;EAEAK,WAAWA,CAACF,EAAU;IACpB,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAiB,GAAG,IAAI,CAACF,MAAM,IAAIO,EAAE,EAAE,CAAC;EAC9D;EACAG,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACT,IAAI,CAACa,MAAM,CAAiB,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,CAAC;EACjE;;AAvBWX,eAAe,C;mBAAfA,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAApB,UAAA,GAAAkB,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAApB,MAAA;AAAA;AAAfC,eAAe,C;SAAfA,eAAe;EAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}