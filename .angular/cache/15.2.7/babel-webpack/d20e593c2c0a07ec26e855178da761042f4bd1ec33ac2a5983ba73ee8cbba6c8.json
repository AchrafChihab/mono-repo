{"ast":null,"code":"import { CategoryService } from '@medcoding/shared';\nimport { UntypedFormControl, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@medcoding/shared\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nexport class EditCategoryComponent {\n  constructor(categoryService, route, location) {\n    this.categoryService = categoryService;\n    this.route = route;\n    this.location = location;\n    this.id = \"\";\n    this.categoryForm = new FormGroup({\n      label: new UntypedFormControl('', [Validators.required]),\n      icon: new UntypedFormControl('', [Validators.required, Validators.pattern(/[a-zA-Z-]*/)]),\n      color: new UntypedFormControl()\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.categoryService.getCategory(params.id).subscribe(res => {\n        this.id = params.id;\n        this.categoryForm.patchValue(res.category);\n      });\n    });\n  }\n  submit(form) {\n    if (form.invalid) {\n      return;\n    }\n    this.updateCategory();\n  }\n  updateCategory() {\n    this.categoryService.updateCategory(this.id, this.categoryForm.value).subscribe(res => {\n      if (res.success) {\n        this.location.back();\n      }\n    }, err => console.error(err));\n  }\n}\nEditCategoryComponent.ɵfac = function EditCategoryComponent_Factory(t) {\n  return new (t || EditCategoryComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Location));\n};\nEditCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditCategoryComponent,\n  selectors: [[\"admin-editcategory\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"row\", \"mt-3\"], [1, \"col-md-6\"], [1, \"col-md-6\", \"text-end\"], [\"routerLink\", \"/admin/category\", 1, \"btn\", \"btn-success\"], [1, \"row\"], [1, \"col-md-4\", \"mx-auto\", \"mt-3\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"for\", \"label\"], [\"formControlName\", \"label\", \"id\", \"label\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"icon\"], [\"formControlName\", \"icon\", \"id\", \"icon\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"color\"], [\"formControlName\", \"color\", \"id\", \"color\", \"type\", \"color\", 1, \"form-control\"], [1, \"d-grid\", \"mt-2\"], [1, \"btn\", \"btn-warning\"]],\n  template: function EditCategoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Edit category\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"a\", 3);\n      i0.ɵɵtext(6, \"Back to list\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"submit\", function EditCategoryComponent_Template_form_submit_9_listener() {\n        return ctx.submit(ctx.categoryForm);\n      });\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Label\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 12);\n      i0.ɵɵtext(20, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 14)(23, \"button\", 15);\n      i0.ɵɵtext(24, \"Update category\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LWNhdGVnb3J5LmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvYWRtaW4vc3JjL2FwcC9wYWdlcy9lZGl0LWNhdGVnb3J5L2VkaXQtY2F0ZWdvcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRLQUE0SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CategoryService","UntypedFormControl","FormGroup","Validators","Location","ActivatedRoute","EditCategoryComponent","constructor","categoryService","route","location","id","categoryForm","label","required","icon","pattern","color","ngOnInit","params","subscribe","getCategory","res","patchValue","category","submit","form","invalid","updateCategory","value","success","back","err","console","error","i0","ɵɵdirectiveInject","i1","i2","i3","selectors","decls","vars","consts","template","EditCategoryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditCategoryComponent_Template_form_submit_9_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\laragon\\www\\Angular-15-with-monorepo--master\\apps\\admin\\src\\app\\pages\\edit-category\\edit-category.component.ts","C:\\laragon\\www\\Angular-15-with-monorepo--master\\apps\\admin\\src\\app\\pages\\edit-category\\edit-category.component.html"],"sourcesContent":["import { CategoryService, Category } from '@medcoding/shared';\nimport { UntypedFormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'admin-editcategory',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.scss']\n})\nexport class EditCategoryComponent implements OnInit {\n\n  id: string = \"\"\n  categoryForm = new FormGroup({\n    label: new UntypedFormControl('', [Validators.required]),\n    icon: new UntypedFormControl('', [Validators.required, Validators.pattern(/[a-zA-Z-]*/)]),\n    color: new UntypedFormControl(),\n  })\n\n  constructor(private categoryService: CategoryService, private route: ActivatedRoute, private location: Location) {}\n\n  ngOnInit(): void {\n      this.route.params.subscribe((params: any) => {\n          this.categoryService.getCategory(params.id).subscribe(res => {\n            this.id = params.id\n            this.categoryForm.patchValue(res.category)\n          })\n      })\n  }\n\n  submit(form: FormGroup) {\n\n    if(form.invalid) {\n      return\n    }\n\n    this.updateCategory()\n\n  }\n\n  updateCategory() {\n    this.categoryService.updateCategory(this.id, this.categoryForm.value).subscribe(res => {\n      if(res.success) {\n       this.location.back()\n      }\n    },\n    err => console.error(err))\n  }\n\n\n\n}\n","\n<div class=\"row mt-3\">\n    <div class=\"col-md-6\">\n        <h1>Edit category</h1>\n    </div>\n    <div class=\"col-md-6 text-end\"><a routerLink=\"/admin/category\" class=\"btn btn-success\">Back to list</a></div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4 mx-auto mt-3\">\n\n\n      <form [formGroup]=\"categoryForm\" (submit)=\"submit(categoryForm)\">\n\n            <div class=\"form-group\">\n                <label for=\"label\">Label</label>\n                <input formControlName=\"label\" id=\"label\" type=\"text\" class=\"form-control\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"icon\">Icon</label>\n                <input formControlName=\"icon\" id=\"icon\" type=\"text\" class=\"form-control\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"color\">Color</label>\n                <input formControlName=\"color\" id=\"color\" type=\"color\" class=\"form-control\">\n            </div>\n\n            <div class=\"d-grid mt-2\">\n                <button class=\"btn btn-warning\">Update category</button>\n            </div>\n\n        </form>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}