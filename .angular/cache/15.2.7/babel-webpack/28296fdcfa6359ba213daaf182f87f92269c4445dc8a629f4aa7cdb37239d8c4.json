{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/v1/products';\n  }\n  getAllProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  addProduct(product, formData) {\n    return this.http.post(this.apiUrl, product, FormData);\n  }\n  updateProduct(id, product) {\n    return this.http.patch(`${this.apiUrl}/${id}`, product);\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  deleteProduct(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpClient","ProductsService","constructor","http","apiUrl","getAllProducts","get","addProduct","product","formData","post","FormData","updateProduct","id","patch","getProduct","deleteProduct","delete","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["C:\\Users\\dell\\Desktop\\Angular-15-with-monorepo--master\\libs\\shared\\src\\lib\\services\\products.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { ResOneProduct, ResProduct,Product } from './../models/product';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  apiUrl = 'http://localhost:5000/api/v1/products'\n\n  constructor(private http: HttpClient) {}\n\n  getAllProducts(): Observable<ResProduct> {\n    return this.http.get<ResProduct>(this.apiUrl)\n  }\n\n  addProduct(product: Product, formData: Form): Observable<ResOneProduct> {\n    return this.http.post<ResOneProduct>(this.apiUrl, product, FormData)\n  }\n\n  updateProduct(id: string, product: Product): Observable<ResOneProduct> {\n    return this.http.patch<ResOneProduct>(`${this.apiUrl}/${id}`, product)\n  }\n\n  getProduct(id: string): Observable<ResOneProduct> {\n    return this.http.get<ResOneProduct>(`${this.apiUrl}/${id}`)\n  }\n  deleteProduct(id: string): Observable<ResOneProduct> {\n    return this.http.delete<ResOneProduct>(`${this.apiUrl}/${id}`)\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,sBAAsB;;;AAOjD,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,uCAAuC;EAET;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAEAG,UAAUA,CAACC,OAAgB,EAAEC,QAAc;IACzC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAgB,IAAI,CAACN,MAAM,EAAEI,OAAO,EAAEG,QAAQ,CAAC;EACtE;EAEAC,aAAaA,CAACC,EAAU,EAAEL,OAAgB;IACxC,OAAO,IAAI,CAACL,IAAI,CAACW,KAAK,CAAgB,GAAG,IAAI,CAACV,MAAM,IAAIS,EAAE,EAAE,EAAEL,OAAO,CAAC;EACxE;EAEAO,UAAUA,CAACF,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,IAAIS,EAAE,EAAE,CAAC;EAC7D;EACAG,aAAaA,CAACH,EAAU;IACtB,OAAO,IAAI,CAACV,IAAI,CAACc,MAAM,CAAgB,GAAG,IAAI,CAACb,MAAM,IAAIS,EAAE,EAAE,CAAC;EAChE;;AAvBWZ,eAAe,C;mBAAfA,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAApB,UAAA;AAAA;AAAfC,eAAe,C;SAAfA,eAAe;EAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}