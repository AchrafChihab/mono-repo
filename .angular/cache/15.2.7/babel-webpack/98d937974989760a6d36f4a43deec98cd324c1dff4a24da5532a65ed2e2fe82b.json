{"ast":null,"code":"var _a, _b;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, UntypedFormControl, Validators } from '@angular/forms';\nlet EditUserComponent = class EditUserComponent {\n  constructor(categoryService, route, location) {\n    this.categoryService = categoryService;\n    this.route = route;\n    this.location = location;\n    this.id = \"\";\n    this.categoryForm = new FormGroup({\n      label: new UntypedFormControl('', [Validators.required]),\n      icon: new UntypedFormControl('', [Validators.required, Validators.pattern(/[a-zA-Z-]*/)]),\n      color: new UntypedFormControl()\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.categoryService.getCategory(params.id).subscribe(res => {\n        this.id = params.id;\n        this.categoryForm.patchValue(res.category);\n      });\n    });\n  }\n  submit(form) {\n    if (form.invalid) {\n      return;\n    }\n    this.updateCategory();\n  }\n  updateCategory() {\n    this.categoryService.updateCategory(this.id, this.categoryForm.value).subscribe(res => {\n      if (res.success) {\n        this.location.back();\n      }\n    }, err => console.error(err));\n  }\n};\nEditUserComponent = __decorate([Component({\n  selector: 'admin-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof CategoryService !== \"undefined\" && CategoryService) === \"function\" ? _a : Object, typeof (_b = typeof ActivatedRoute !== \"undefined\" && ActivatedRoute) === \"function\" ? _b : Object, Location])], EditUserComponent);\nexport { EditUserComponent };","map":{"version":3,"names":["Component","FormGroup","UntypedFormControl","Validators","EditUserComponent","constructor","categoryService","route","location","id","categoryForm","label","required","icon","pattern","color","ngOnInit","params","subscribe","getCategory","res","patchValue","category","submit","form","invalid","updateCategory","value","success","back","err","console","error","__decorate","selector","templateUrl","styleUrls","CategoryService","_a","Object","_b","ActivatedRoute","Location"],"sources":["C:\\Users\\dell\\Desktop\\Angular-15-with-monorepo--master\\apps\\admin\\src\\app\\pages\\edit-user\\edit-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, UntypedFormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'admin-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit{\n\n\n  id: string = \"\"\n  categoryForm = new FormGroup({\n    label: new UntypedFormControl('', [Validators.required]),\n    icon: new UntypedFormControl('', [Validators.required, Validators.pattern(/[a-zA-Z-]*/)]),\n    color: new UntypedFormControl(),\n  })\n\n  constructor(private categoryService: CategoryService, private route: ActivatedRoute, private location: Location) {}\n\n  ngOnInit(): void {\n      this.route.params.subscribe((params: any) => {\n          this.categoryService.getCategory(params.id).subscribe(res => {\n            this.id = params.id\n            this.categoryForm.patchValue(res.category)\n          })\n      })\n  }\n\n  submit(form: FormGroup) {\n\n    if(form.invalid) {\n      return\n    }\n\n    this.updateCategory()\n\n  }\n\n  updateCategory() {\n    this.categoryService.updateCategory(this.id, this.categoryForm.value).subscribe(res => {\n      if(res.success) {\n       this.location.back()\n      }\n    },\n    err => console.error(err))\n  }\n\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,kBAAkB,EAAEC,UAAU,QAAQ,gBAAgB;AAOnE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,eAAgC,EAAUC,KAAqB,EAAUC,QAAkB;IAA3F,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,QAAQ,GAARA,QAAQ;IAPrG,KAAAC,EAAE,GAAW,EAAE;IACf,KAAAC,YAAY,GAAG,IAAIT,SAAS,CAAC;MAC3BU,KAAK,EAAE,IAAIT,kBAAkB,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,CAAC,CAAC;MACxDC,IAAI,EAAE,IAAIX,kBAAkB,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;MACzFC,KAAK,EAAE,IAAIb,kBAAkB;KAC9B,CAAC;EAEgH;EAElHc,QAAQA,CAAA;IACJ,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,SAAS,CAAED,MAAW,IAAI;MACxC,IAAI,CAACX,eAAe,CAACa,WAAW,CAACF,MAAM,CAACR,EAAE,CAAC,CAACS,SAAS,CAACE,GAAG,IAAG;QAC1D,IAAI,CAACX,EAAE,GAAGQ,MAAM,CAACR,EAAE;QACnB,IAAI,CAACC,YAAY,CAACW,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEAC,MAAMA,CAACC,IAAe;IAEpB,IAAGA,IAAI,CAACC,OAAO,EAAE;MACf;;IAGF,IAAI,CAACC,cAAc,EAAE;EAEvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACpB,eAAe,CAACoB,cAAc,CAAC,IAAI,CAACjB,EAAE,EAAE,IAAI,CAACC,YAAY,CAACiB,KAAK,CAAC,CAACT,SAAS,CAACE,GAAG,IAAG;MACpF,IAAGA,GAAG,CAACQ,OAAO,EAAE;QACf,IAAI,CAACpB,QAAQ,CAACqB,IAAI,EAAE;;IAEvB,CAAC,EACDC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EAC5B;CAED;AAxCY1B,iBAAiB,GAAA6B,UAAA,EAL7BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,E,qDAWqCC,eAAe,oBAAfA,eAAe,mBAAAC,EAAA,GAAAC,MAAA,UAAAC,EAAA,UAAiBC,cAAc,oBAAdA,cAAc,mBAAAD,EAAA,GAAAD,MAAA,EAAoBG,QAAQ,G,EAVpGtC,iBAAiB,CAwC7B;SAxCYA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}